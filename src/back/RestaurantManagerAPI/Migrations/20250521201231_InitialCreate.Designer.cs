// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RestaurantManagerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521201231_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Pizzas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bebidas"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sobremesas"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Acompanhamentos"
                        });
                });

            modelBuilder.Entity("Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecoAdicional")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Média",
                            PrecoAdicional = 8.50m,
                            ProdutoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Grande",
                            PrecoAdicional = 12.50m,
                            ProdutoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Média",
                            PrecoAdicional = 8.50m,
                            ProdutoId = 2
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Grande",
                            PrecoAdicional = 12.50m,
                            ProdutoId = 2
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Média",
                            PrecoAdicional = 8.50m,
                            ProdutoId = 3
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Grande",
                            PrecoAdicional = 12.50m,
                            ProdutoId = 3
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Média",
                            PrecoAdicional = 8.50m,
                            ProdutoId = 4
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Grande",
                            PrecoAdicional = 12.50m,
                            ProdutoId = 4
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Gelo",
                            PrecoAdicional = 1.00m,
                            ProdutoId = 13
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Gelo",
                            PrecoAdicional = 1.00m,
                            ProdutoId = 14
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Molho Extra",
                            PrecoAdicional = 2.50m,
                            ProdutoId = 17
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Molho Extra",
                            PrecoAdicional = 2.50m,
                            ProdutoId = 18
                        });
                });

            modelBuilder.Entity("ExtraSelecionado", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "PedidoId", "ExtraId");

                    b.HasIndex("ExtraId");

                    b.ToTable("ExtrasSelecionados");
                });

            modelBuilder.Entity("Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Administrador",
                            Senha = "$2a$11$jUYbELcP2CnolUSJWqId3uSWuXh2XlB9wQN0V2xdmFr33EBz6LIOu",
                            Tipo = "Gerente",
                            Usuario = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "João da Silva",
                            Senha = "$2a$11$UIulyqCEJlS1NDgO4oqemOZbekDHiZVBVVliKWFIQztPRzcKMdJCK",
                            Tipo = "Funcionario",
                            Usuario = "joao"
                        });
                });

            modelBuilder.Entity("ItemPedido", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("ItemRelatorioPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExtrasSelecionados")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("RelatorioPedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioPedidoId");

                    b.ToTable("ItensRelatorioPedidos");
                });

            modelBuilder.Entity("Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Mesas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mesa 01"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Mesa 02"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Mesa 03"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Mesa 04"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Mesa 05"
                        });
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("PrecoFinal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MesaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descricao = "Calabresa, molho de tomate, mussarela e cebola",
                            Foto = "/uploads/produtos/pizza-calabresa.jpg",
                            Nome = "Pizza de Calabresa",
                            Preco = 23.40m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Descricao = "Mussarela, tomate, manjericão e molho de tomate",
                            Foto = "/uploads/produtos/pizza-marguerita.jpg",
                            Nome = "Pizza Marguerita",
                            Preco = 25.90m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Descricao = "Presunto, mussarela, ovo, cebola, azeitona e molho de tomate",
                            Foto = "/uploads/produtos/pizza-portuguesa.jpg",
                            Nome = "Pizza Portuguesa",
                            Preco = 28.50m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            Descricao = "Chocolate ao leite, morangos frescos e leite condensado",
                            Foto = "/uploads/produtos/pizza-choco-morango.jpg",
                            Nome = "Pizza Chocolate com Morango",
                            Preco = 32.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 2,
                            Descricao = "Garrafa de 500ml",
                            Foto = "/uploads/produtos/agua-com-gas.jpg",
                            Nome = "Água com Gás",
                            Preco = 4.50m
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            Descricao = "Garrafa de 500ml",
                            Foto = "/uploads/produtos/agua-sem-gas.jpg",
                            Nome = "Água sem Gás",
                            Preco = 3.50m
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            Descricao = "Lata 350ml",
                            Foto = "/uploads/produtos/coca-cola-lata.jpg",
                            Nome = "Coca-Cola Lata",
                            Preco = 5.00m
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 2,
                            Descricao = "Lata 350ml",
                            Foto = "/uploads/produtos/guarana-lata.jpg",
                            Nome = "Guaraná Lata",
                            Preco = 4.80m
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 2,
                            Descricao = "Lata 350ml",
                            Foto = "/uploads/produtos/cerveja-skol.jpg",
                            Nome = "Cerveja Skol",
                            Preco = 6.50m
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 2,
                            Descricao = "Lata 350ml",
                            Foto = "/uploads/produtos/cerveja-brahma.jpg",
                            Nome = "Cerveja Brahma",
                            Preco = 6.50m
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 2,
                            Descricao = "Copo 300ml",
                            Foto = "/uploads/produtos/suco-laranja.jpg",
                            Nome = "Suco de Laranja",
                            Preco = 7.50m
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 2,
                            Descricao = "Copo 300ml",
                            Foto = "/uploads/produtos/suco-abacaxi.jpg",
                            Nome = "Suco de Abacaxi",
                            Preco = 7.50m
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 2,
                            Descricao = "Taça de 200ml",
                            Foto = "/uploads/produtos/vinho-tinto-taca.jpg",
                            Nome = "Vinho Tinto Taça",
                            Preco = 12.00m
                        },
                        new
                        {
                            Id = 14,
                            CategoriaId = 2,
                            Descricao = "Taça de 200ml",
                            Foto = "/uploads/produtos/vinho-branco-taca.jpg",
                            Nome = "Vinho Branco Taça",
                            Preco = 12.00m
                        },
                        new
                        {
                            Id = 15,
                            CategoriaId = 3,
                            Descricao = "Porção individual",
                            Foto = "/uploads/produtos/mousse-maracuja.jpg",
                            Nome = "Mousse de Maracujá",
                            Preco = 9.90m
                        },
                        new
                        {
                            Id = 16,
                            CategoriaId = 3,
                            Descricao = "300ml com granola e banana",
                            Foto = "/uploads/produtos/acai-tigela.jpg",
                            Nome = "Açaí na Tigela",
                            Preco = 14.50m
                        },
                        new
                        {
                            Id = 17,
                            CategoriaId = 4,
                            Descricao = "Porção com 8 unidades",
                            Foto = "/uploads/produtos/pao-alho.jpg",
                            Nome = "Pão de Alho",
                            Preco = 12.00m
                        },
                        new
                        {
                            Id = 18,
                            CategoriaId = 4,
                            Descricao = "Porção para 2 pessoas",
                            Foto = "/uploads/produtos/calabresa-acebolada.jpg",
                            Nome = "Calabresa Acebolada",
                            Preco = 18.00m
                        });
                });

            modelBuilder.Entity("RelatorioPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeFuncionario")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeMesa")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecoFinal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("RelatorioPedidos");
                });

            modelBuilder.Entity("Extra", b =>
                {
                    b.HasOne("Produto", "Produto")
                        .WithMany("Extras")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ExtraSelecionado", b =>
                {
                    b.HasOne("Extra", "Extra")
                        .WithMany("ExtrasSelecionados")
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItemPedido", "ItemPedido")
                        .WithMany("ExtrasSelecionados")
                        .HasForeignKey("ProdutoId", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");

                    b.Navigation("ItemPedido");
                });

            modelBuilder.Entity("ItemPedido", b =>
                {
                    b.HasOne("Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ItemRelatorioPedido", b =>
                {
                    b.HasOne("RelatorioPedido", "RelatorioPedido")
                        .WithMany("Itens")
                        .HasForeignKey("RelatorioPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatorioPedido");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.HasOne("Funcionario", "Funcionario")
                        .WithMany("Pedidos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mesa", "Mesa")
                        .WithMany("Pedidos")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Produto", b =>
                {
                    b.HasOne("Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Extra", b =>
                {
                    b.Navigation("ExtrasSelecionados");
                });

            modelBuilder.Entity("Funcionario", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ItemPedido", b =>
                {
                    b.Navigation("ExtrasSelecionados");
                });

            modelBuilder.Entity("Mesa", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("Produto", b =>
                {
                    b.Navigation("Extras");

                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("RelatorioPedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
